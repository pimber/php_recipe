{% extends 'base.html.twig' %}

{% block body %}

<div class="container">
		<div class="row">
			<div class="col-lg-7 col-md-9 d-flex flex-column mt-5 mb-5">
				<p class="text-green">
					<strong>Ændre din opskrift her</strong>
				</p>
				<h1 class="mt-2 mb-4">Kom i gang med at ændre din opskrift</h1>
				<p>Her kan du redigere din opskrift. Ret stavefejl, tilføj manglende ingredienser, angiv mængder og beskriv fremgangsmåden, så andre kan få glæde af den. God fornøjelse!</p>
			</div>
		</div>
            {{ form_start(form) }}
            <div class="row">
				<div class="col-lg-3 col-md-2 col-sm-1"></div>
                <div class="col-lg-6 col-md-8 col-sm-10 mb-4">
					<div>
						<div class="mb-3">
							{{ form_label(form.name) }}
							{{ form_widget(form.name) }}
						</div>
						<div class="mb-3">
							{{ form_label(form.description) }}
							{{ form_widget(form.description) }}
						</div>
						<div id="ingredients-wrapper" data-prototype="{{ form_widget(form.ingredients.vars.prototype)|e('html_attr') }}" data-index="{{ form.ingredients|length }}">
							{{ form_label(form.ingredients) }}
							<hr>
							{% for ingredientForm in form.ingredients %}
								<div class="d-flex flex-row justify-content-between remove">
									<div class="w-100 pe-2">
										{{ form_label(ingredientForm.ingredient) }}
										{{ form_widget(ingredientForm.ingredient) }}
									</div>
									<div class="w-100 pe-2">
										{{ form_label(ingredientForm.amount) }}
										{{ form_widget(ingredientForm.amount) }}
									</div>
									<div class="w-100 pe-2">
										{{ form_label(ingredientForm.ingredientAmountType) }}
										{{ form_widget(ingredientForm.ingredientAmountType) }}
									</div>
									<div class="d-flex align-items-end">
										<button type="button" class="btn btn-danger remove-ingredient">Fjern</button>
									</div>
								</div>
							{% endfor %}
						</div>
						<button type="button" id="add-ingredient" class="btn btn-success mt-3">Tilføj ingrediens</button>
						<hr>
						<div class="mb-3">
							{{ form_label(form.cook_time_hour) }}
							{{ form_widget(form.cook_time_hour) }}
						</div>
						<div class="mb-3">
							{{ form_label(form.cook_time_min) }}
							{{ form_widget(form.cook_time_min) }}
						</div>
						<div class="mb-3">
							{{ form_label(form.prep_time_hour) }}
							{{ form_widget(form.prep_time_hour) }}
						</div>
						<div class="mb-3">
							{{ form_label(form.prep_time_min) }}
							{{ form_widget(form.prep_time_min) }}
						</div>
						<button type="submit" class="btn btn-success mb-3">Opdatere</button>
					</div>
				</div>
				<div class="col-lg-3 col-md-2 col-sm-1"></div>
            {{ form_end(form) }}
			</div>
        </div>
    </div>
</div>

<script>

document.addEventListener('DOMContentLoaded', function () { 
	// Get elements (List of ingredients and the ADD button) from DOM
	var ingredientsWrapper = document.getElementById('ingredients-wrapper');
	var addIngredientButton = document.getElementById('add-ingredient');

	addIngredientButton.addEventListener('click', function () { 
		
	// The new ingredient HTML
	var newIngredient = ingredientsWrapper.dataset.prototype;
	// Ingredient index in the list
	var index = ingredientsWrapper.dataset.index;
	// Set index on the new ingredients
	newIngredient = newIngredient.replace(/__name__/g, index)
	// Add classes to divs
	newIngredient = newIngredient.replace('_ingredients_' + index, '_ingredients_' + index + '" class="d-flex flex-row justify-content-between remove" ');
	newIngredient = newIngredient.replaceAll('<div><label', '<div class="w-100 pe-2"><label');
	// Add remove button to ingredient
	var removeBtn = `<div class="d-flex align-items-end">
						<button type="button" class="btn btn-danger remove-ingredient">Slet</button>
					</div>`;
					
	newIngredient = newIngredient.replace('</div></div>', '</div>' + removeBtn + '</div>');

	// Count up index
	ingredientsWrapper.dataset.index ++;

	// Show the new ingredient in HTML/DOM
	var newElement = document.createElement('div');
	newElement.innerHTML = newIngredient;
	ingredientsWrapper.appendChild(newElement);
	});

	ingredientsWrapper.addEventListener('click', function (event) {
		if (event.target.classList.contains('remove-ingredient')) {
			event.target.closest('.remove').remove();
		}
	});
});

</script>
    
{% endblock %}